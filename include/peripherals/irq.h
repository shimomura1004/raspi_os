#ifndef	_P_IRQ_H
#define	_P_IRQ_H

#include "peripherals/base.h"

#define IRQ_BASIC_PENDING	(PBASE+0x0000B200)
#define IRQ_PENDING_1		(PBASE+0x0000B204)
#define IRQ_PENDING_2		(PBASE+0x0000B208)
#define FIQ_CONTROL		     (PBASE+0x0000B20C)
#define ENABLE_IRQS_1		(PBASE+0x0000B210)
#define ENABLE_IRQS_2		(PBASE+0x0000B214)
#define ENABLE_BASIC_IRQS	(PBASE+0x0000B218)
#define DISABLE_IRQS_1		(PBASE+0x0000B21C)
#define DISABLE_IRQS_2		(PBASE+0x0000B220)
#define DISABLE_BASIC_IRQS	(PBASE+0x0000B224)

#define SYSTEM_TIMER_IRQ_0_BIT  (1 << 0)
#define SYSTEM_TIMER_IRQ_1_BIT  (1 << 1)
#define SYSTEM_TIMER_IRQ_2_BIT  (1 << 2)
#define SYSTEM_TIMER_IRQ_3_BIT  (1 << 3)
#define AUX_IRQ_BIT             (1 << 29)

#define MBOX_IRQ_BIT               (1 << 1)
#define PENDING_REGISTER_1_BIT     (1 << 8)
#define PENDING_REGISTER_2_BIT     (1 << 9)

// todo: mailbox.h にする
// Local Peripherals
#define LOCAL_PERIPHERAL_BASE (0x40000000)

#define MBOX_CORE0_CONTROL (LOCAL_PERIPHERAL_BASE + 0x50)
#define MBOX_CORE1_CONTROL (LOCAL_PERIPHERAL_BASE + 0x54)
#define MBOX_CORE2_CONTROL (LOCAL_PERIPHERAL_BASE + 0x58)
#define MBOX_CORE3_CONTROL (LOCAL_PERIPHERAL_BASE + 0x5C)

#define MBOX_INTERRUPT_CONTROL_FIQ_3_BIT (1 << 7)
#define MBOX_INTERRUPT_CONTROL_FIQ_2_BIT (1 << 6)
#define MBOX_INTERRUPT_CONTROL_FIQ_1_BIT (1 << 5)
#define MBOX_INTERRUPT_CONTROL_FIQ_0_BIT (1 << 4)
#define MBOX_INTERRUPT_CONTROL_IRQ_3_BIT (1 << 3)
#define MBOX_INTERRUPT_CONTROL_IRQ_2_BIT (1 << 2)
#define MBOX_INTERRUPT_CONTROL_IRQ_1_BIT (1 << 1)
#define MBOX_INTERRUPT_CONTROL_IRQ_0_BIT (1 << 0)

#define MBOX_INTERRUPT_ENABLE_IRQ_ALL \
    (MBOX_INTERRUPT_CONTROL_IRQ_3_BIT | MBOX_INTERRUPT_CONTROL_IRQ_2_BIT | \
     MBOX_INTERRUPT_CONTROL_IRQ_1_BIT | MBOX_INTERRUPT_CONTROL_IRQ_0_BIT)
#define MBOX_INTERRUPT_ENABLE_FIQ_ALL \
     (MBOX_INTERRUPT_CONTROL_FIQ_3_BIT | MBOX_INTERRUPT_CONTROL_FIQ_2_BIT | \
      MBOX_INTERRUPT_CONTROL_FIQ_1_BIT | MBOX_INTERRUPT_CONTROL_FIQ_0_BIT)
 
#define CORE0_IRQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x60)
#define CORE1_IRQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x64)
#define CORE2_IRQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x68)
#define CORE3_IRQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x6C)
#define CORE0_FIQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x70)
#define CORE1_FIQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x74)
#define CORE2_FIQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x78)
#define CORE3_FIQ_SOURCE (LOCAL_PERIPHERAL_BASE + 0x7C)

#define MBOX_CORE0_SET_BASE   (LOCAL_PERIPHERAL_BASE + 0x80)
#define MBOX_CORE1_SET_BASE   (LOCAL_PERIPHERAL_BASE + 0x90)
#define MBOX_CORE2_SET_BASE   (LOCAL_PERIPHERAL_BASE + 0xa0)
#define MBOX_CORE3_SET_BASE   (LOCAL_PERIPHERAL_BASE + 0xb0)

#define MBOX_CORE0_RD_CLR_BASE   (LOCAL_PERIPHERAL_BASE + 0xC0)
#define MBOX_CORE1_RD_CLR_BASE   (LOCAL_PERIPHERAL_BASE + 0xD0)
#define MBOX_CORE2_RD_CLR_BASE   (LOCAL_PERIPHERAL_BASE + 0xE0)
#define MBOX_CORE3_RD_CLR_BASE   (LOCAL_PERIPHERAL_BASE + 0xF0)

// Core0 Mailbox Set registers for sending to other cores
#define MBOX_CORE0_SET_0    (MBOX_CORE0_SET_BASE + 0x0)  // Core0 -> Core0
#define MBOX_CORE0_SET_1    (MBOX_CORE0_SET_BASE + 0x4)  // Core0 -> Core1
#define MBOX_CORE0_SET_2    (MBOX_CORE0_SET_BASE + 0x8)  // Core0 -> Core2
#define MBOX_CORE0_SET_3    (MBOX_CORE0_SET_BASE + 0xC)  // Core0 -> Core3

#define MBOX_CORE1_SET_0    (MBOX_CORE1_SET_BASE + 0x0)  // Core1 -> Core0
#define MBOX_CORE1_SET_1    (MBOX_CORE1_SET_BASE + 0x4)  // Core1 -> Core1
#define MBOX_CORE1_SET_2    (MBOX_CORE1_SET_BASE + 0x8)  // Core1 -> Core2
#define MBOX_CORE1_SET_3    (MBOX_CORE1_SET_BASE + 0xC)  // Core1 -> Core3

#define MBOX_CORE2_SET_0    (MBOX_CORE2_SET_BASE + 0x0)  // Core2 -> Core0
#define MBOX_CORE2_SET_1    (MBOX_CORE2_SET_BASE + 0x4)  // Core2 -> Core1
#define MBOX_CORE2_SET_2    (MBOX_CORE2_SET_BASE + 0x8)  // Core2 -> Core2
#define MBOX_CORE2_SET_3    (MBOX_CORE2_SET_BASE + 0xC)  // Core2 -> Core3

#define MBOX_CORE3_SET_0    (MBOX_CORE3_SET_BASE + 0x0)  // Core3 -> Core0
#define MBOX_CORE3_SET_1    (MBOX_CORE3_SET_BASE + 0x4)  // Core3 -> Core1
#define MBOX_CORE3_SET_2    (MBOX_CORE3_SET_BASE + 0x8)  // Core3 -> Core2
#define MBOX_CORE3_SET_3    (MBOX_CORE3_SET_BASE + 0xC)  // Core3 -> Core3

#define MBOX_CORE0_RD_CLR_0    (MBOX_CORE0_RD_CLR_BASE + 0x0)  // Core0 -> Core0
#define MBOX_CORE0_RD_CLR_1    (MBOX_CORE0_RD_CLR_BASE + 0x4)  // Core0 -> Core1
#define MBOX_CORE0_RD_CLR_2    (MBOX_CORE0_RD_CLR_BASE + 0x8)  // Core0 -> Core2
#define MBOX_CORE0_RD_CLR_3    (MBOX_CORE0_RD_CLR_BASE + 0xC)  // Core0 -> Core3

#define MBOX_CORE1_RD_CLR_0    (MBOX_CORE1_RD_CLR_BASE + 0x0)  // Core1 -> Core0
#define MBOX_CORE1_RD_CLR_1    (MBOX_CORE1_RD_CLR_BASE + 0x4)  // Core1 -> Core1
#define MBOX_CORE1_RD_CLR_2    (MBOX_CORE1_RD_CLR_BASE + 0x8)  // Core1 -> Core2
#define MBOX_CORE1_RD_CLR_3    (MBOX_CORE1_RD_CLR_BASE + 0xC)  // Core1 -> Core3

#define MBOX_CORE2_RD_CLR_0    (MBOX_CORE2_RD_CLR_BASE + 0x0)  // Core2 -> Core0
#define MBOX_CORE2_RD_CLR_1    (MBOX_CORE2_RD_CLR_BASE + 0x4)  // Core2 -> Core1
#define MBOX_CORE2_RD_CLR_2    (MBOX_CORE2_RD_CLR_BASE + 0x8)  // Core2 -> Core2
#define MBOX_CORE2_RD_CLR_3    (MBOX_CORE2_RD_CLR_BASE + 0xC)  // Core2 -> Core3

#define MBOX_CORE3_RD_CLR_0    (MBOX_CORE3_RD_CLR_BASE + 0x0)  // Core3 -> Core0
#define MBOX_CORE3_RD_CLR_1    (MBOX_CORE3_RD_CLR_BASE + 0x4)  // Core3 -> Core1
#define MBOX_CORE3_RD_CLR_2    (MBOX_CORE3_RD_CLR_BASE + 0x8)  // Core3 -> Core2
#define MBOX_CORE3_RD_CLR_3    (MBOX_CORE3_RD_CLR_BASE + 0xC)  // Core3 -> Core3

#endif  /*_P_IRQ_H */
